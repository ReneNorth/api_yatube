================================================================================================= FAILURES =================================================================================================
_____________________________________________________________________________________ TestPostAPI.test_comments_create _____________________________________________________________________________________

self = <tests.test_comment.TestPostAPI object at 0x10fb62450>, user_client = <rest_framework.test.APIClient object at 0x1100a6b10>, post = <Post: Тестовый пост 1>, user = <User: TestUser>
another_user = <User: TestUser2>

    @pytest.mark.django_db(transaction=True)
    def test_comments_create(self, user_client, post, user, another_user):
        comments_count = Comment.objects.count()
    
        data = {}
        response = user_client.post(f'/api/v1/posts/{post.id}/comments/', data=data)
        assert response.status_code == 400, (
            'Проверьте, что при POST запросе на `/api/v1/posts/{post.id}/comments/` '
            'с не правильными данными возвращается статус 400'
        )
    
        data = {'author': another_user.id, 'text': 'Новый коммент 1233', 'post': post.id}
        response = user_client.post(f'/api/v1/posts/{post.id}/comments/', data=data)
        assert response.status_code == 201, (
            'Проверьте, что при POST запросе на `/api/v1/posts/{post.id}/comments/` '
            'с правильными данными возвращается статус 201'
        )
    
        test_data = response.json()
        msg_error = (
            'Проверьте, что при POST запросе на `/api/v1/posts/{post.id}/comments/` '
            'возвращается словарь с данными нового комментария'
        )
        assert type(test_data) == dict, msg_error
        assert test_data.get('text') == data['text'], msg_error
    
>       assert test_data.get('author') == user.username, (
            'Проверьте, что при POST запросе на `/api/v1/posts/{post.id}/comments/` '
            'создается комментарий от авторизованного пользователя'
        )
E       AssertionError: Проверьте, что при POST запросе на `/api/v1/posts/{post.id}/comments/` создается комментарий от авторизованного пользователя
E       assert None == 'TestUser'
E         +None
E         -'TestUser'

tests/test_comment.py:92: AssertionError
------------------------------------------------------------------------------------------ Captured stdout setup -------------------------------------------------------------------------------------------
Operations to perform:
  Synchronize unmigrated apps: messages, rest_framework, staticfiles
  Apply all migrations: admin, auth, authtoken, contenttypes, posts, sessions
Synchronizing apps without migrations:
  Creating tables...
    Running deferred SQL...
Running migrations:
  Applying contenttypes.0001_initial... OK
  Applying auth.0001_initial... OK
  Applying admin.0001_initial... OK
  Applying admin.0002_logentry_remove_auto_add... OK
  Applying admin.0003_logentry_add_action_flag_choices... OK
  Applying contenttypes.0002_remove_content_type_name... OK
  Applying auth.0002_alter_permission_name_max_length... OK
  Applying auth.0003_alter_user_email_max_length... OK
  Applying auth.0004_alter_user_username_opts... OK
  Applying auth.0005_alter_user_last_login_null... OK
  Applying auth.0006_require_contenttypes_0002... OK
  Applying auth.0007_alter_validators_add_error_messages... OK
  Applying auth.0008_alter_user_username_max_length... OK
  Applying auth.0009_alter_user_last_name_max_length... OK
  Applying auth.0010_alter_group_name_max_length... OK
  Applying auth.0011_update_proxy_permissions... OK
  Applying auth.0012_alter_user_first_name_max_length... OK
  Applying authtoken.0001_initial... OK
  Applying authtoken.0002_auto_20160226_1747... OK
  Applying authtoken.0003_tokenproxy... OK
  Applying posts.0001_initial... OK
  Applying posts.0002_commetspost... OK
  Applying posts.0003_delete_commetspost... OK
  Applying sessions.0001_initial... OK
------------------------------------------------------------------------------------------ Captured stderr setup -------------------------------------------------------------------------------------------
Creating test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
------------------------------------------------------------------------------------------- Captured stdout call -------------------------------------------------------------------------------------------
comment created
TestUser
-------------------------------------------------------------------------------------------- Captured log call ---------------------------------------------------------------------------------------------
WARNING  django.request:log.py:230 Bad Request: /api/v1/posts/1/comments/
----------------------------------------------------------------------------------------- Captured stderr teardown -----------------------------------------------------------------------------------------
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
========================================================================================= short test summary info ==========================================================================================
FAILED tests/test_comment.py::TestPostAPI::test_comments_create - AssertionError: Проверьте, что при POST запросе на `/api/v1/posts/{post.id}/comments/` создается комментарий от авторизованного пользов...